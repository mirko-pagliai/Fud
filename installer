#!/bin/bash

# Fud Dependencies
DEPENDENCIES=(curlftpfs inotify-tools libnotify-bin sshfs unison)
MOUNTPOINT="/mnt/fud"

#Colors
RED="\e[1;31m" #Red
GREEN="\e[1;32m" #Green
RESET="\e[0m" #Reset!

# Print on screen
printScreen() { echo -e "$@"; }

# Check if user is root
if [[ $EUID -ne 0 ]]; then
   printScreen $RED"Error:"$RESET" this script must be run as root"
   exit 1
fi

# F is the directory where this script is located
F=$(dirname $(cd "${0%/*}" 2>/dev/null; echo "$PWD"/"${0##*/}"))
# Copy executables files in /usr/local/bin and set execute permissions
cp $F/fud $F/fudconf /usr/local/bin
chmod +x /usr/local/bin/fud /usr/local/bin/fudconf
# Conpy Fud icon in /usr/share/app-install/icons/
cp $F/fud.png /usr/share/app-install/icons/

# Change, if necessary, /etc/fuse.conf file
if grep "user_allow_other" /etc/fuse.conf &> /dev/null; then
	sed -i "s/#user_allow_other/user_allow_other/g" /etc/fuse.conf
else
	echo "user_allow_other" >> /etc/fuse.conf
fi

# Create the mount point, if doesn't exists
if [ ! -e $MOUNTPOINT ]; then
	mkdir -p $MOUNTPOINT
	printScreen "Creata la directory /mnt/fud per il mount della directory remota."
fi
# If the mount point is already mounted, unmount it
if ! cat /proc/mounts | grep $MOUNTPOINT &> /dev/null; then
	umount -f $MOUNTPOINT &> /dev/null
fi
# Set mount point permissions
chmod -R 777 $MOUNTPOINT

# Check for missing dependencies
PKGSTOINSTALL=""
for (( i=0; i<${tLen=${#DEPENDENCIES[@]}}; i++ )); do
	if [[ ! `dpkg -l | grep -w "ii  ${DEPENDENCIES[$i]} "` ]]; then
		PKGSTOINSTALL=$PKGSTOINSTALL" "${DEPENDENCIES[$i]}
	fi
done

# If some dependencies are missing, asks if he wants to install
if [ "$PKGSTOINSTALL" != "" ]; then
	printScreen -n "Some dependencies are missing. Want to install them? (Y/n): "
	read SURE
	if [[ $SURE = "Y" || $SURE = "y" || $SURE = "" ]]; then	
		apt-get install $PKGSTOINSTALL
		if [ $? -eq 0 ] ; then
			printScreen "All dependencies are satisfied."
		fi
	fi
fi

printScreen $GREEN"Success"$RESET": Fud has been properly installed."

exit 0
